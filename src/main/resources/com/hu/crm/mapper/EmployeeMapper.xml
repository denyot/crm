<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hu.crm.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.hu.crm.domain.Employee">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="realName" property="realname" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="inputTime" property="inputtime" jdbcType="DATE"/>
        <result column="admin" property="admin" jdbcType="BIT"/>
        <result column="state" property="state" jdbcType="BIT"/>
        <association property="dept" javaType="com.hu.crm.domain.Department" columnPrefix="d_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM employee
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.hu.crm.domain.Employee" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO employee (username, realName, password,
                              tel, email, dept_id,
                              inputTime, admin, state)
        VALUES (#{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{dept.id,jdbcType=BIGINT},
                #{inputtime,jdbcType=DATE}, #{admin,jdbcType=BIT}, #{state,jdbcType=BIT})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.hu.crm.domain.Employee">
        UPDATE employee
        SET username  = #{username,jdbcType=VARCHAR},
            realName  = #{realname,jdbcType=VARCHAR},
            tel       = #{tel,jdbcType=VARCHAR},
            email     = #{email,jdbcType=VARCHAR},
            dept_id   = #{dept.id,jdbcType=BIGINT},
            inputTime = #{inputtime,jdbcType=DATE}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateState">
        UPDATE employee
        SET state = 0
        WHERE id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, username, realName, password, tel, email, dept_id, inputTime, admin, state
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, username, realName, password, tel, email, dept_id, inputTime, admin, state
    from employee
  </select>
    <select id="login" resultMap="BaseResultMap">
    SELECT * from employee WHERE username=#{username} and password=#{password}
  </select>
    <sql id="where_id">
        <where>
            <if test="keyword != null">
                (username like  concat('%',#{keyword},'%')  OR realname LIKE  concat('%',#{keyword},'%') OR email LIKE concat('%',#{keyword},'%')
                OR tel LIKE concat('%',#{keyword},'%'))
            </if>
        </where>
    </sql>
    <select id="queryForPageCount" resultType="long">
        select count(*) from employee
        <include refid="where_id"/>
    </select>
    <select id="queryForPage" resultMap="BaseResultMap">
        select e.id, e.username, e.realName,e.tel, e.email, e.inputTime, e.admin, e.state ,d.id as d_id,d.name
        as d_name from employee e LEFT JOIN department d on (e.dept_id=d.id)
        <include refid="where_id"/>
        <if test="page!=null">
                limit #{start},#{rows}
        </if>
    </select>
</mapper>